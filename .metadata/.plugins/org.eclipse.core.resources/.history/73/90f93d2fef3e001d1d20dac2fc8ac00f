<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper">

	<!-- 상세보기 칼럼명 수정 -->
	<resultMap type="map" id="detailHisList">
		<result column="rn" property="rn" />
		<result column="his_reg_date" property="hisRegDate" />
		<result column="mem_name" property="memName" />
		<result column="his_appr_status" property="hisApprStatus" />
	</resultMap>

	<!-- 상세 테이블 칼럼명 수정 -->
	<resultMap type="map" id="detailList">
		<result column="appr_no" property="apprNo" />
		<result column="mem_name" property="memName" />
		<result column="appr_title" property="apprTitle" />
		<result column="appr_content" property="apprContent" />
		<result column="appr_status" property="apprStatus" />
		<result column="writer_id" property="writerId" />
		<result column="approver_id" property="approverId" />
	</resultMap>

	<!-- 메인 list 칼럼명 수정 -->
	<resultMap type="map" id="list">
		<result column="appr_no" property="apprNo" />
		<result column="writer_name" property="memName" />
		<result column="appr_title" property="apprTitle" />
		<result column="appr_reg_date" property="apprRegDate" />
		<result column="appr_date" property="apprDate" />
		<result column="approver_id" property="approverId" />
		<result column="appr_status" property="apprStatus" />
	</resultMap>

	<!-- 멤버 테이블 칼럼명 수정 -->
	<resultMap type="map" id="memberList">
		<result column="mem_no" property="memNo"/>
		<result column="mem_name" property="memName"/>
		<result column="mem_id" property="memId"/>
		<result column="mem_pw" property="memPw"/>
		<result column="mem_rank" property="memRank"/>
	</resultMap>
	
	<!-- 아이디&비밀번호 조회 -->
	<select id="selectFindIdPw" parameterType="map" resultType="int">
		select count(mem_id)
		  from sh_member
		 where mem_id = #{id}
		   and mem_pw = #{pw}
	</select>

	<!-- 아이디 조회 -->
	<select id="selectFindId" parameterType="string" resultType="int">
		select count(mem_id)
		  from sh_member
		 where mem_id = #{id}
	</select>

	<!-- 로그인 성공한 회원의 정보 -->
	<select id="selectSignInMemberInfo" parameterType="map" resultMap="memberList">
		select 
		       mem_no
		     , mem_name
		     , mem_id
		     , mem_pw
		     , mem_rank
		  from sh_member
		 where mem_id = #{id}
		   and mem_pw = #{pw}
	</select>
	
	<!-- 글쓰기 화면 게시글 다음번호 가져오기 -->
	<select id="selectListNextNo" resultType="int">
		select nvl(max(appr_no), 0) + 1
		  from sh_approval
	</select>
	
	<!-- 임시저장 또는 결재 버튼 눌렀을 때 결재 테이블에 정보 저장 -->
	<insert id="insertSaveApproval" parameterType="map">
		insert into sh_approval
			(appr_no, writer_id, appr_title, appr_content, appr_reg_date, appr_date, approver_id, appr_status)
		values
		<choose>
			<when test='status == "1"'>
				(#{no}, #{writerId}, #{title}, #{content}, SYSDATE, null, null, '1')   
			</when>			
			<when test='status == "2" and rank == null'>
				(#{no}, #{writerId}, #{title}, #{content}, SYSDATE, null, null, '2')   
			</when>
			<when test='status == "2" and rank == "3"'>
				(#{no}, #{writerId}, #{title}, #{content}, SYSDATE, SYSDATE, #{memId}, '3')   
			</when>
			<when test='status == "2" and rank == "4"'>
				(#{no}, #{writerId}, #{title}, #{content}, SYSDATE, SYSDATE, #{memId}, '4')   
			</when>
		</choose>
	</insert>
	
	<!-- 임시저장 또는 결재 버튼 눌렀을 때 히스토리 테이블에 정보 저장 -->
	<insert id="insertSaveHistory" parameterType="map">
		insert into sh_history
			(his_no, writer_id, approver_id, his_reg_date, his_appr_status, appr_no)
		values
		<choose>
			<when test='status == "1"'>
				(sh_his_seq.nextval, #{writerId}, null, SYSDATE, '1', #{no})  
			</when>
			<when test='status == "2" and rank == null'>
				(sh_his_seq.nextval, #{writerId}, null, SYSDATE, '2', #{no})  
			</when>
			<when test='status == "2" and rank == "3"'>
				(sh_his_seq.nextval, #{writerId}, #{memId}, SYSDATE, '3', #{no})  
			</when>
			<when test='status == "2" and rank == "4"'>
				(sh_his_seq.nextval, #{writerId}, #{memId}, SYSDATE, '4', #{no})  
			</when>
			<otherwise>
				(sh_his_seq.nextval, #{writerId}, #{memId}, SYSDATE, '5', #{no})
			</otherwise>
		</choose>
	</insert>
	
	<!-- 결재 테이블에서 list 가져오기 -->
	<select id="selectList" parameterType="map" resultMap="list">
		select a.appr_no
			 , (select m.mem_name from sh_member m where m.mem_id = a.writer_id) as writer_name
			 , a.appr_title
			 , a.appr_reg_date
			 , a.appr_date
			 ,(select m.mem_name from sh_member m where m.mem_id = a.approver_id) as approver_id
			 , a.appr_status
		  from sh_approval a
		 where 1 = 1 	 
		 <choose>
		 	<when test='memRank == "a" or memRank == "b"'>
		 		and a.writer_id = #{memId}
		 	</when>
		 	<when test='memRank == "c"'>
		 		and (a.appr_status = '2' 
		 		     or a.writer_id = #{memId} 
		 		     or a.appr_no in (select e.appr_no 
		 		     				    from (select row_number() over(partition by appr_no order by his_no desc) rnum, appr_no, approver_id from sh_history) e
								 	   where e.rnum in (1, 2)
								 	     and e.approver_id = #{memId}
								 	     and a.appr_status != '1')								 	  
		 		     )      
		 	</when>
		 	<when test='memRank == "d"'>
		 		and (appr_status = '3' 
		 		     or writer_id = #{memId} 
		 		     or a.appr_no in (select e.appr_no 
		 		     				    from (select row_number() over(partition by appr_no order by his_no desc) rnum, appr_no, approver_id from sh_history) e
								 	   where e.rnum in (1, 2)
								 	     and e.approver_id = #{memId}
								 	     and a.appr_status != '1'
								 	     and a.appr_status != '2')
		 		     )
		 	</when>
		 	
		 	
		 	<when test="column == 'writer'">
		 		and (select m.mem_name from sh_member m where m.mem_id = a.writer_id) like '%' || #{query} || '%'
		 	</when>
		 	<when test="column == 'approver'">
		 		and (select m.mem_name from sh_member m where m.mem_id = a.approver_id) like '%' || #{query} || '%'
		 	</when>
		 	<when test="column == 'titleContent'">
		 		and (a.appr_title like '%' || #{query} || '%' or a.appr_content like '%' || #{query} || '%')
		 	</when>
		 	<when test="apprStatus == '1'">
		 		and a.appr_status = '1'
		 	</when>
		 	<when test="apprStatus == '2'">
		 		and a.appr_status = '2'
		 	</when>
		 	<when test="apprStatus == '3'">
		 		and a.appr_status = '2'
		 	</when>
		 	<when test="apprStatus == '4'">
		 		and a.appr_status = '2'
		 	</when>
		 	<when test="apprStatus == '5'">
		 		and a.appr_status = '2'
		 	</when>
		 </choose>
		 
		 <if test="startDay != '' and endDay != ''">
		 	and to_char(a.appr_reg_date, 'YYYY-MM-DD') between #{startDay} and #{endDay}
		 </if>
		 
		 order by appr_no
	</select>
	
	
	<!-- 결재 테이블에서 list 가져오기 -->	
	<!--  
	<select id="selectList" parameterType="map" resultMap="list">
		select distinct a.appr_no
			 , (select m.mem_name from sh_member m where m.mem_id = a.writer_id) as writer_name
			 , a.appr_title
			 , a.appr_reg_date
			 , a.appr_date
			 ,(select m.mem_name from sh_member m where m.mem_id = a.approver_id) as approver_id
			 , a.appr_status
		  from sh_member m inner join sh_approval a on m.mem_id = a.writer_id
		     			   inner join sh_history h on a.appr_no = h.appr_no
		 where 1 = 1 	 
		 <choose>
		 	<when test='memRank == "a" or memRank == "b"'>
		 		and a.writer_id = #{memId}
		 	</when>
		 	<when test='memRank == "c"'>
		 		and (a.appr_status = '2' 
		 		     or a.writer_id = #{memId} 
		 		     or (h.approver_id = #{memId} and h.his_appr_status = '5' and a.appr_status = '5')
		 		     or (h.approver_id = #{memId} and a.appr_status in ('3', '4'))
		 		     )      
		 	</when>
		 	<when test='memRank == "d"'>
		 		and (a.appr_status = '3' 
		 		     or a.writer_id = #{memId} 
		 		     or (h.approver_id = #{memId} and h.his_appr_status = '5' and a.appr_status = '5') 
		 		     or (h.approver_id = #{memId} and a.appr_status = '4') 
		 		     )
		 	</when>
		 </choose>
		 order by a.appr_no
	</select>
	-->
	<!--  
	 	<when test="column == 'writer'">
	 		and (select m.mem_name from sh_member m where m.mem_id = a.writer_id) like '%' || #{query} || '%'
	 	</when>
 	-->
 	<!-- and (a.appr_status = '2' or a.writer_id = #{memId} or (h.approver_id = #{memId} and a.appr_status != '1')) -->
	<!-- and (a.appr_status = '3' or a.writer_id = #{memId} or (h.approver_id = #{memId} and a.appr_status != '1' and a.appr_status != '2')) -->
	
	
	
	<!-- 상세페이지 -->
	<select id="selectDetailApprByNo" parameterType="int" resultMap="detailList">
		select 
			     a.appr_no
			   , m.mem_name
			   , a.appr_title
			   , a.appr_content
			   , a.appr_status
			   , a.writer_id
			   , a.approver_id		     
		  from sh_member m inner join sh_approval a
		    on m.mem_id = a.writer_id
		 where appr_no = #{apprNo}
	</select>
	
	<!-- 결재 테이블에서 결재No 유무 확인 -->
	<select id="selectFindApprNo" parameterType="int" resultType="int">
		select count(appr_no)
		  from sh_approval
		 where appr_no = #{apprNo}
	</select>
	
	<!-- 임시저장 버튼 눌렀을 때 결재 테이블에 해당 정보가 있는 경우
		  결재 테이블에 있는 정보 수정
	-->
	<update id="updateModifyApprovalByNo" parameterType="map">
		update sh_approval
			<choose>
				<when test='status == "1"'>
				   set appr_title = #{title}
				     , appr_content = #{content}
				     , appr_date = null
				     , approver_id = null
				     , appr_status = '1'				
				</when>
				<when test='status == "2" and rank == null'>
				   set appr_title = #{title}
				     , appr_content = #{content}
				     , appr_date = null
				     , approver_id = null
				     , appr_status = '2'					
				</when>
				<when test='status == "2" and rank == "3"'>
				   set appr_title = #{title}
				     , appr_content = #{content}
				     , appr_date = SYSDATE
				     , approver_id = #{memId}
				     , appr_status = '3'					
				</when>
				<when test='status == "2" and rank == "4"'>
				   set appr_title = #{title}
				     , appr_content = #{content}
				     , appr_date = SYSDATE
				     , approver_id = #{memId}
				     , appr_status = '4'					
				</when>
			</choose>
		 where appr_no = #{no}			  
	</update>
	
	<!-- 반려 버튼 눌렀을 때 결재 테이블 정보 수정 -->
	<update id="updateCancelByNo" parameterType="map">
		update sh_approval
		   set appr_date = SYSDATE
		     , approver_id = #{memId}
		     , appr_status = '5'
		 where appr_no = #{no}
	</update>
	
	<!-- 상세보기에서 히스토리 가져오기 -->
	<select id="selectDetailHisByNo" parameterType="int" resultMap="detailHisList">
		select 
			    row_number() over(order by his_no) as rn
			  , h.his_reg_date
			  , m.mem_name
			  , h.his_appr_status
	      from sh_member m inner join sh_history h
	        on m.mem_id = h.writer_id
	     where 1 = 1
	       and h.appr_no = #{apprNo}
	</select>
	

	
	
	
	
	
	
	
	
	
	<!-- 결재자ID를 이름으로 변경하기 -->
	<select id="selectChangeApprIdToName" parameterType="map" resultType="string">
		select m.mem_name
		  from sh_member m inner join sh_approval a
		    on m.mem_id = a.writer_id
		 where a.appr_no = #{apprNo}
		   and a.approver_id = #{approverId}
	</select>

	
</mapper>